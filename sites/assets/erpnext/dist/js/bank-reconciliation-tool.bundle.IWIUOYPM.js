(()=>{frappe.provide("erpnext.accounts.bank_reconciliation");erpnext.accounts.bank_reconciliation.DataTableManager=class{constructor(e){Object.assign(this,e),this.dialog_manager=new erpnext.accounts.bank_reconciliation.DialogManager(this.company,this.bank_account),this.make_dt()}make_dt(){var e=this;frappe.call({method:"erpnext.accounts.doctype.bank_reconciliation_tool.bank_reconciliation_tool.get_bank_transactions",args:{bank_account:this.bank_account},callback:function(t){e.format_data(t.message),e.get_dt_columns(),e.get_datatable(),e.set_listeners()}})}get_dt_columns(){this.columns=[{name:"Date",editable:!1,width:100},{name:"Party Type",editable:!1,width:95},{name:"Party",editable:!1,width:100},{name:"Description",editable:!1,width:350},{name:"Deposit",editable:!1,width:100,format:e=>"<span style='color:green;'>"+format_currency(e,this.currency)+"</span>"},{name:"Withdrawal",editable:!1,width:100,format:e=>"<span style='color:red;'>"+format_currency(e,this.currency)+"</span>"},{name:"Unallocated Amount",editable:!1,width:100,format:e=>"<span style='color:blue;'>"+format_currency(e,this.currency)+"</span>"},{name:"Reference Number",editable:!1,width:140},{name:"Actions",editable:!1,sortable:!1,focusable:!1,dropdown:!1,width:80}]}format_data(e){this.transactions=[],e[0]&&(this.currency=e[0].currency),this.transaction_dt_map={};let t;e.forEach(a=>{t=this.transactions.push(this.format_row(a)),this.transaction_dt_map[a.name]=t-1})}format_row(e){return[e.date,e.party_type,e.party,e.description,e.deposit,e.withdrawal,e.unallocated_amount,e.reference_number,`
			<Button class="btn btn-primary btn-xs center"  data-name = ${e.name} >
				Actions
			</a>
			`]}get_datatable(){let e={columns:this.columns,data:this.transactions,dynamicRowHeight:!0,checkboxColumn:!1,inlineFilters:!0};this.datatable=new frappe.DataTable(this.$reconciliation_tool_dt.get(0),e),$(`.${this.datatable.style.scopeClass} .dt-scrollable`).css("max-height","calc(100vh - 400px)"),this.transactions.length>0?(this.$reconciliation_tool_dt.show(),this.$no_bank_transactions.hide()):(this.$reconciliation_tool_dt.hide(),this.$no_bank_transactions.show())}set_listeners(){var e=this;$(`.${this.datatable.style.scopeClass} .dt-scrollable`).on("click",".btn",function(){return e.dialog_manager.show_dialog($(this).attr("data-name"),t=>e.update_dt_cards(t)),!0})}update_dt_cards(e){let t=this.transaction_dt_map[e.name];e.unallocated_amount>0?this.transactions[t]=this.format_row(e):this.transactions.splice(t,1),this.datatable.refresh(this.transactions,this.columns),this.transactions.length==0&&(this.$reconciliation_tool_dt.hide(),this.$no_bank_transactions.show()),this.get_cleared_balance().then(()=>{this.cards_manager.$cards[1].set_value(format_currency(this.cleared_balance),this.currency),this.cards_manager.$cards[2].set_value(format_currency(this.bank_statement_closing_balance-this.cleared_balance),this.currency),this.cards_manager.$cards[2].set_value_color(this.bank_statement_closing_balance-this.cleared_balance==0?"text-success":"text-danger")})}get_cleared_balance(){if(this.bank_account&&this.bank_statement_to_date)return frappe.call({method:"erpnext.accounts.doctype.bank_reconciliation_tool.bank_reconciliation_tool.get_account_balance",args:{bank_account:this.bank_account,till_date:this.bank_statement_to_date},callback:e=>this.cleared_balance=e.message})}};frappe.provide("erpnext.accounts.bank_reconciliation");erpnext.accounts.bank_reconciliation.NumberCardManager=class{constructor(e){Object.assign(this,e),this.make_cards()}make_cards(){this.$reconciliation_tool_cards.empty(),this.$cards=[],this.$summary=$('<div class="report-summary"></div>').hide().appendTo(this.$reconciliation_tool_cards);var e=[{value:this.bank_statement_closing_balance,label:"Closing Balance as per Bank Statement",datatype:"Currency",currency:this.currency},{value:this.cleared_balance,label:"Closing Balance as per ERP",datatype:"Currency",currency:this.currency},{value:this.bank_statement_closing_balance-this.cleared_balance,label:"Difference",datatype:"Currency",currency:this.currency}];e.forEach(t=>{let a=new erpnext.accounts.NumberCard(t);this.$cards.push(a),a.$card.appendTo(this.$summary)}),this.$cards[2].set_value_color(this.bank_statement_closing_balance-this.cleared_balance==0?"text-success":"text-danger"),this.$summary.css({"border-bottom":"0px","margin-left":"0px","margin-right":"0px"}),this.$summary.show()}};erpnext.accounts.NumberCard=class{constructor(e){this.$card=frappe.utils.build_summary_item(e)}set_value(e){this.$card.find("div").text(e)}set_value_color(e){this.$card.find("div").removeClass("text-danger text-success").addClass(`${e}`)}set_indicator(e){this.$card.find("span").removeClass("indicator red green").addClass(`indicator ${e}`)}};frappe.provide("erpnext.accounts.bank_reconciliation");erpnext.accounts.bank_reconciliation.DialogManager=class{constructor(e,t){this.bank_account=t,this.company=e,this.make_dialog()}show_dialog(e,t){this.bank_transaction_name=e,this.update_dt_cards=t,frappe.call({method:"frappe.client.get_value",args:{doctype:"Bank Transaction",filters:{name:this.bank_transaction_name},fieldname:["date as reference_date","deposit","withdrawal","currency","description","name","bank_account","company","reference_number","party_type","party","unallocated_amount","allocated_amount"]},callback:a=>{a.message&&(this.bank_transaction=a.message,a.message.payment_entry=1,this.dialog.set_values(a.message),this.dialog.show())}})}get_linked_vouchers(e){frappe.call({method:"erpnext.accounts.doctype.bank_reconciliation_tool.bank_reconciliation_tool.get_linked_payments",args:{bank_transaction_name:this.bank_transaction_name,document_types:e},callback:t=>{let a=t.message;if(a&&a.length>0){let o=this.dialog.fields_dict.payment_proposals.$wrapper;o.show(),this.dialog.fields_dict.no_matching_vouchers.$wrapper.hide(),this.data=[],a.forEach(n=>{let c=n[5]?n[5]:n[8];this.data.push([n[1],n[2],c,format_currency(n[3],n[9]),n[6],n[4]])}),this.get_dt_columns(),this.get_datatable(o)}else this.dialog.fields_dict.payment_proposals.$wrapper.hide(),this.dialog.fields_dict.no_matching_vouchers.$wrapper.show();this.dialog.show()}})}get_dt_columns(){this.columns=[{name:"Document Type",editable:!1,width:125},{name:"Document Name",editable:!1,width:150},{name:"Reference Date",editable:!1,width:120},{name:"Amount",editable:!1,width:100},{name:"Party",editable:!1,width:120},{name:"Reference Number",editable:!1,width:140}]}get_datatable(e){if(this.datatable)this.datatable.refresh(this.data,this.columns),this.datatable.rowmanager.checkMap=[];else{let t={columns:this.columns,data:this.data,dynamicRowHeight:!0,checkboxColumn:!0,inlineFilters:!0};this.datatable=new frappe.DataTable(e.get(0),t)}}make_dialog(){let e=this;e.selected_payment=null;let t=[{label:__("Action"),fieldname:"action",fieldtype:"Select",options:`Match Against Voucher
Create Voucher
Update Bank Transaction`,default:"Match Against Voucher"},{fieldname:"column_break_4",fieldtype:"Column Break"},{label:__("Document Type"),fieldname:"document_type",fieldtype:"Select",options:`Payment Entry
Journal Entry`,default:"Payment Entry",depends_on:"eval:doc.action=='Create Voucher'"},{fieldtype:"Section Break",fieldname:"section_break_1",label:__("Filters"),depends_on:"eval:doc.action=='Match Against Voucher'"}];frappe.call({method:"erpnext.accounts.doctype.bank_transaction.bank_transaction.get_doctypes_for_bank_reconciliation",callback:a=>{$.each(a.message,(o,n)=>{o%3==0&&t.push({fieldtype:"Column Break"}),t.push({fieldtype:"Check",label:n,fieldname:frappe.scrub(n),onchange:()=>this.update_options()})}),t.push(...this.get_voucher_fields()),e.dialog=new frappe.ui.Dialog({title:__("Reconcile the Bank Transaction"),fields:t,size:"large",primary_action:o=>this.reconciliation_dialog_primary_action(o)})}})}get_voucher_fields(){return[{fieldtype:"Check",label:"Show Only Exact Amount",fieldname:"exact_match",onchange:()=>this.update_options()},{fieldtype:"Section Break",fieldname:"section_break_1",label:__("Select Vouchers to Match"),depends_on:"eval:doc.action=='Match Against Voucher'"},{fieldtype:"HTML",fieldname:"payment_proposals"},{fieldtype:"HTML",fieldname:"no_matching_vouchers",options:'<div class="text-muted text-center">No Matching Vouchers Found</div>'},{fieldtype:"Section Break",fieldname:"details",label:"Details",depends_on:"eval:doc.action!='Match Against Voucher'"},{fieldname:"reference_number",fieldtype:"Data",label:"Reference Number",mandatory_depends_on:"eval:doc.action=='Create Voucher'"},{default:"Today",fieldname:"posting_date",fieldtype:"Date",label:"Posting Date",reqd:1,depends_on:"eval:doc.action=='Create Voucher'"},{fieldname:"reference_date",fieldtype:"Date",label:"Cheque/Reference Date",mandatory_depends_on:"eval:doc.action=='Create Voucher'",depends_on:"eval:doc.action=='Create Voucher'",reqd:1},{fieldname:"mode_of_payment",fieldtype:"Link",label:"Mode of Payment",options:"Mode of Payment",depends_on:"eval:doc.action=='Create Voucher'"},{fieldname:"edit_in_full_page",fieldtype:"Button",label:"Edit in Full Page",click:()=>{this.edit_in_full_page()},depends_on:"eval:doc.action=='Create Voucher'"},{fieldname:"column_break_7",fieldtype:"Column Break"},{default:"Journal Entry Type",fieldname:"journal_entry_type",fieldtype:"Select",label:"Journal Entry Type",options:`Journal Entry
Inter Company Journal Entry
Bank Entry
Cash Entry
Credit Card Entry
Debit Note
Credit Note
Contra Entry
Excise Entry
Write Off Entry
Opening Entry
Depreciation Entry
Exchange Rate Revaluation
Deferred Revenue
Deferred Expense`,depends_on:"eval:doc.action=='Create Voucher' &&  doc.document_type=='Journal Entry'",mandatory_depends_on:"eval:doc.action=='Create Voucher' &&  doc.document_type=='Journal Entry'"},{fieldname:"second_account",fieldtype:"Link",label:"Account",options:"Account",depends_on:"eval:doc.action=='Create Voucher' &&  doc.document_type=='Journal Entry'",mandatory_depends_on:"eval:doc.action=='Create Voucher' &&  doc.document_type=='Journal Entry'",get_query:()=>({filters:{is_group:0,company:this.company}})},{fieldname:"party_type",fieldtype:"Link",label:"Party Type",options:"DocType",mandatory_depends_on:"eval:doc.action=='Create Voucher' &&  doc.document_type=='Payment Entry'",get_query:function(){return{filters:{name:["in",Object.keys(frappe.boot.party_account_types)]}}}},{fieldname:"party",fieldtype:"Dynamic Link",label:"Party",options:"party_type",mandatory_depends_on:"eval:doc.action=='Create Voucher' && doc.document_type=='Payment Entry'"},{fieldname:"project",fieldtype:"Link",label:"Project",options:"Project",depends_on:"eval:doc.action=='Create Voucher' && doc.document_type=='Payment Entry'"},{fieldname:"cost_center",fieldtype:"Link",label:"Cost Center",options:"Cost Center",depends_on:"eval:doc.action=='Create Voucher' && doc.document_type=='Payment Entry'"},{fieldtype:"Section Break",fieldname:"details_section",label:"Transaction Details",collapsible:1},{fieldname:"deposit",fieldtype:"Currency",label:"Deposit",read_only:1},{fieldname:"withdrawal",fieldtype:"Currency",label:"Withdrawal",read_only:1},{fieldname:"description",fieldtype:"Small Text",label:"Description",read_only:1},{fieldname:"column_break_17",fieldtype:"Column Break",read_only:1},{fieldname:"allocated_amount",fieldtype:"Currency",label:"Allocated Amount",read_only:1},{fieldname:"unallocated_amount",fieldtype:"Currency",label:"Unallocated Amount",read_only:1}]}get_selected_attributes(){let e=[];return this.dialog.$wrapper.find(".checkbox input").each((t,a)=>{$(a).is(":checked")&&e.push($(a).attr("data-fieldname"))}),e}update_options(){let e=this.get_selected_attributes();this.get_linked_vouchers(e)}reconciliation_dialog_primary_action(e){e.action=="Match Against Voucher"&&this.match(e),e.action=="Create Voucher"&&e.document_type=="Payment Entry"&&this.add_payment_entry(e),e.action=="Create Voucher"&&e.document_type=="Journal Entry"?this.add_journal_entry(e):e.action=="Update Bank Transaction"&&this.update_transaction(e)}match(){var e=this.datatable.rowmanager.checkMap;let t=[];e.forEach((o,n)=>{o==1&&t.push(this.datatable.datamanager.rows[n])});let a=[];t.forEach(o=>{a.push({payment_doctype:o[2].content,payment_name:o[3].content,amount:o[5].content})}),frappe.call({method:"erpnext.accounts.doctype.bank_reconciliation_tool.bank_reconciliation_tool.reconcile_vouchers",args:{bank_transaction_name:this.bank_transaction.name,vouchers:a},callback:o=>{let n="Bank Transaction "+this.bank_transaction.name+" Matched";frappe.show_alert(n),this.update_dt_cards(o.message),this.dialog.hide()}})}add_payment_entry(e){frappe.call({method:"erpnext.accounts.doctype.bank_reconciliation_tool.bank_reconciliation_tool.create_payment_entry_bts",args:{bank_transaction_name:this.bank_transaction.name,reference_number:e.reference_number,reference_date:e.reference_date,party_type:e.party_type,party:e.party,posting_date:e.posting_date,mode_of_payment:e.mode_of_payment,project:e.project,cost_center:e.cost_center},callback:t=>{let a="Bank Transaction "+this.bank_transaction.name+" added as Payment Entry";frappe.show_alert(a),this.update_dt_cards(t.message),this.dialog.hide()}})}add_journal_entry(e){frappe.call({method:"erpnext.accounts.doctype.bank_reconciliation_tool.bank_reconciliation_tool.create_journal_entry_bts",args:{bank_transaction_name:this.bank_transaction.name,reference_number:e.reference_number,reference_date:e.reference_date,party_type:e.party_type,party:e.party,posting_date:e.posting_date,mode_of_payment:e.mode_of_payment,entry_type:e.journal_entry_type,second_account:e.second_account},callback:t=>{let a="Bank Transaction "+this.bank_transaction.name+" added as Journal Entry";frappe.show_alert(a),this.update_dt_cards(t.message),this.dialog.hide()}})}update_transaction(e){frappe.call({method:"erpnext.accounts.doctype.bank_reconciliation_tool.bank_reconciliation_tool.update_bank_transaction",args:{bank_transaction_name:this.bank_transaction.name,reference_number:e.reference_number,party_type:e.party_type,party:e.party},callback:t=>{let a="Bank Transaction "+this.bank_transaction.name+" updated";frappe.show_alert(a),this.update_dt_cards(t.message),this.dialog.hide()}})}edit_in_full_page(){let e=this.dialog.get_values(!0);e.document_type=="Payment Entry"?frappe.call({method:"erpnext.accounts.doctype.bank_reconciliation_tool.bank_reconciliation_tool.create_payment_entry_bts",args:{bank_transaction_name:this.bank_transaction.name,reference_number:e.reference_number,reference_date:e.reference_date,party_type:e.party_type,party:e.party,posting_date:e.posting_date,mode_of_payment:e.mode_of_payment,project:e.project,cost_center:e.cost_center,allow_edit:!0},callback:t=>{let a=frappe.model.sync(t.message);frappe.set_route("Form",a[0].doctype,a[0].name)}}):frappe.call({method:"erpnext.accounts.doctype.bank_reconciliation_tool.bank_reconciliation_tool.create_journal_entry_bts",args:{bank_transaction_name:this.bank_transaction.name,reference_number:e.reference_number,reference_date:e.reference_date,party_type:e.party_type,party:e.party,posting_date:e.posting_date,mode_of_payment:e.mode_of_payment,entry_type:e.journal_entry_type,second_account:e.second_account,allow_edit:!0},callback:t=>{var a=frappe.model.sync(t.message);frappe.set_route("Form",a[0].doctype,a[0].name)}})}};})();
//# sourceMappingURL=bank-reconciliation-tool.bundle.IWIUOYPM.js.map
